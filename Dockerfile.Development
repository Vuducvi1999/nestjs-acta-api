# Base stage
FROM node:20.18.0-alpine AS base

WORKDIR /app

# Install OS dependencies
RUN apk add --no-cache libc6-compat

# Install dependencies (as they change less often)
FROM base AS deps

# Install Yarn
RUN npm install -g yarn@1.22.22 --force

# Copy only package manager files first for better cache
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./

# Copy prisma schema
COPY prisma ./prisma/

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy the rest of the application code
COPY . .

# Build the app
RUN yarn build

# Production image
FROM base AS runner

WORKDIR /app
ENV NODE_ENV=production

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && adduser --system --uid 1001 nestjs
USER nestjs

# Copy the built app and node_modules
COPY --from=deps --chown=nestjs:nodejs /app ./

EXPOSE 4001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s \
    CMD wget --no-verbose --tries=1 --spider http://localhost:4001/ || exit 1

# Start the application
ENTRYPOINT ["node", "-r", "tsconfig-paths/register", "dist/src/main.js"]