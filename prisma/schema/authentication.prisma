model EmailChange {
  token      String   @id @db.Char(21)
  newEmail   String
  userId     String   @unique
  validUntil DateTime @default(dbgenerated("(timezone('utc'::text, now()) + '2 days'::interval)")) @db.Timestamp(6)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("email_changes")
}

model EmailVerification {
  token      String   @id @db.Char(30)
  userId     String   @unique
  validUntil DateTime @default(dbgenerated("(timezone('utc'::text, now()) + '2 days'::interval)")) @db.Timestamp(6)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("email_verifications")
}

model PasswordReset {
  token      String   @id @db.Char(21)
  userId     String   @unique
  validUntil DateTime @db.Timestamp(6)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_resets")
}

model PasswordChangeOtp {
  token      String   @id @db.Char(6) // 6-digit OTP
  userId     String   @unique
  validUntil DateTime @db.Timestamp(6)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_change_otps")
}
